digraph aodvOperation {

	node[shape=box]
	edge[len=5]
	
	S[label="Origem (S) \n - Inicia a descoberta de rotas enviando \nRREQ para os nós A, B e C \n - Recebe RREP dos nós A, B e C \n - Escolhe o caminho por C, \npois tem o maior número de sequência \n - Atualiza as informações na tabela de rotas \n - Inicia a comunicação com o destino \natravés do caminho escolhido."]
	A[label="A \n - Verifica rota para o destino. \n - Não encontra rota. \n - Define o caminho reverso. \n - Propaga RRES. \n - Envia RREP com contagem de \nsalto = c2(<c1)."]
	B[label="B \n - Verifica rota para o destino. \n - Rota encontrada com \ncontagem de salto = c1 \ne número de \nsequência = s1. \n - Envia RREQ."]
	C[label="C \n - Verifica rota para o destino. \n - Não encontra rota. \n - Define o caminho reverso. \n - Propaga RREQ para D e E \n - Recebe RREP do nó D \n - Envia RREP"]
	D[label="D \n - Verifica rota para o destino. \n - Encontra rota com número \nde sequência = s2(>s1). \n - Envia RREP."]
	E[label="E \n - Verifica rota para o destino. \n - Não encontra rota. \n - Define o caminho reverso. \n - Propaga RREQ para F e G. \n - Deleta o caminho reverso depois \nde expirar o tempo. "]
	F[label="F \n - Verifica rota \npara o destino. \n - Não encontra rota."]
	G[label="G \n - Verifica rota \npara o destino. \n - Não encontra rota."]

	S -> A[label="RREQ"]
	A -> S[label="RREP"]

	S -> B[label="RREQ"]
	B -> S[label="RREP"]

	S -> C[label="RREQ"]
	C -> S[label="RREP"]

	C -> D[label="RREQ"]
	D -> C[label="RREP"]

	C -> E[label="RREQ"]

	E -> F
	E -> G

}
