%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../doc/TCC/images/exp1_lost.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Nov  4 16:56:16 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../doc/TCC/images/exp1_lost.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Fabio L. Janiszevski,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov  4 16:56:16 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1342 704 M
5528 0 V
stroke
LTb
1342 704 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 1439 M
5528 0 V
stroke
LTb
1342 1439 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 1439 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 2174 M
5528 0 V
stroke
LTb
1342 2174 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 2174 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 2910 M
5528 0 V
stroke
LTb
1342 2910 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 2910 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 3645 M
5528 0 V
stroke
LTb
1342 3645 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 3645 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 4380 M
5528 0 V
stroke
LTb
1342 4380 M
63 0 V
5465 0 R
-63 0 V
stroke
1210 4380 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
1342 704 M
0 3676 V
stroke
LTb
1342 704 M
0 63 V
0 3613 R
0 -63 V
stroke
1342 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2263 704 M
0 3676 V
stroke
LTb
2263 704 M
0 63 V
0 3613 R
0 -63 V
stroke
2263 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 50)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3185 704 M
0 3676 V
stroke
LTb
3185 704 M
0 63 V
0 3613 R
0 -63 V
stroke
3185 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4106 704 M
0 3676 V
stroke
LTb
4106 704 M
0 63 V
0 3613 R
0 -63 V
stroke
4106 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 150)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5027 704 M
0 3676 V
stroke
LTb
5027 704 M
0 63 V
0 3613 R
0 -63 V
stroke
5027 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5949 704 M
0 2953 V
0 660 R
0 63 V
stroke
LTb
5949 704 M
0 63 V
0 3613 R
0 -63 V
stroke
5949 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 250)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6870 704 M
0 3676 V
stroke
LTb
6870 704 M
0 63 V
0 3613 R
0 -63 V
stroke
6870 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 300)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1342 4380 N
0 -3676 V
5528 0 V
0 3676 V
-5528 0 V
Z stroke
LCb setrgbcolor
440 2542 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Pacotes)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4106 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Tempo de simulacao \(s\))]
] -73.3 MCshow
LTb
4106 4710 M
[ [(Helvetica) 220.0 0.0 true true 0 (Taxa de entrega de pacotes)]
] -73.3 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
5883 4207 M
[ [(Helvetica) 220.0 0.0 true true 0 (AODV)]
] -73.3 MRshow
LT0
6015 4207 M
591 0 V
1342 704 M
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 3676 V
5764 704 L
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
1342 704 Pls
1434 704 Pls
1526 704 Pls
1618 704 Pls
1711 704 Pls
1803 704 Pls
1895 704 Pls
1987 704 Pls
2079 704 Pls
2171 704 Pls
2263 704 Pls
2355 704 Pls
2448 704 Pls
2540 704 Pls
2632 704 Pls
2724 704 Pls
2816 704 Pls
2908 704 Pls
3000 704 Pls
3093 704 Pls
3185 704 Pls
3277 704 Pls
3369 704 Pls
3461 704 Pls
3553 704 Pls
3645 704 Pls
3737 704 Pls
3830 704 Pls
3922 704 Pls
4014 704 Pls
4106 704 Pls
4198 704 Pls
4290 704 Pls
4382 704 Pls
4475 704 Pls
4567 704 Pls
4659 704 Pls
4751 704 Pls
4843 704 Pls
4935 704 Pls
5027 704 Pls
5119 704 Pls
5212 704 Pls
5304 704 Pls
5396 704 Pls
5488 704 Pls
5580 704 Pls
5672 4380 Pls
5764 704 Pls
5857 704 Pls
5949 704 Pls
6041 704 Pls
6133 704 Pls
6225 704 Pls
6317 704 Pls
6409 704 Pls
6501 704 Pls
6594 704 Pls
6686 704 Pls
6778 704 Pls
6870 704 Pls
6310 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
5883 3987 M
[ [(Helvetica) 220.0 0.0 true true 0 (DSDV)]
] -73.3 MRshow
LT1
6015 3987 M
591 0 V
1342 704 M
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
1342 704 Crs
1434 704 Crs
1526 704 Crs
1618 704 Crs
1711 704 Crs
1803 704 Crs
1895 704 Crs
1987 704 Crs
2079 704 Crs
2171 704 Crs
2263 704 Crs
2355 704 Crs
2448 704 Crs
2540 704 Crs
2632 704 Crs
2724 704 Crs
2816 704 Crs
2908 704 Crs
3000 704 Crs
3093 704 Crs
3185 704 Crs
3277 704 Crs
3369 704 Crs
3461 704 Crs
3553 704 Crs
3645 704 Crs
3737 704 Crs
3830 704 Crs
3922 704 Crs
4014 704 Crs
4106 704 Crs
4198 704 Crs
4290 704 Crs
4382 704 Crs
4475 704 Crs
4567 704 Crs
4659 704 Crs
4751 704 Crs
4843 704 Crs
4935 704 Crs
5027 704 Crs
5119 704 Crs
5212 704 Crs
5304 704 Crs
5396 704 Crs
5488 704 Crs
5580 704 Crs
5672 704 Crs
5764 704 Crs
5857 704 Crs
5949 704 Crs
6041 704 Crs
6133 704 Crs
6225 704 Crs
6317 704 Crs
6409 704 Crs
6501 704 Crs
6594 704 Crs
6686 704 Crs
6778 704 Crs
6870 704 Crs
6310 3987 Crs
1.000 UP
1.000 UL
LT2
LTb
5883 3767 M
[ [(Helvetica) 220.0 0.0 true true 0 (OLSR)]
] -73.3 MRshow
LT2
6015 3767 M
591 0 V
1342 704 M
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
92 0 V
93 0 V
92 0 V
92 0 V
92 0 V
1342 704 Star
1434 704 Star
1526 704 Star
1618 704 Star
1711 704 Star
1803 704 Star
1895 704 Star
1987 704 Star
2079 704 Star
2171 704 Star
2263 704 Star
2355 704 Star
2448 704 Star
2540 704 Star
2632 704 Star
2724 704 Star
2816 704 Star
2908 704 Star
3000 704 Star
3093 704 Star
3185 704 Star
3277 704 Star
3369 704 Star
3461 704 Star
3553 704 Star
3645 704 Star
3737 704 Star
3830 704 Star
3922 704 Star
4014 704 Star
4106 704 Star
4198 704 Star
4290 704 Star
4382 704 Star
4475 704 Star
4567 704 Star
4659 704 Star
4751 704 Star
4843 704 Star
4935 704 Star
5027 704 Star
5119 704 Star
5212 704 Star
5304 704 Star
5396 704 Star
5488 704 Star
5580 704 Star
5672 704 Star
5764 704 Star
5857 704 Star
5949 704 Star
6041 704 Star
6133 704 Star
6225 704 Star
6317 704 Star
6409 704 Star
6501 704 Star
6594 704 Star
6686 704 Star
6778 704 Star
6870 704 Star
6310 3767 Star
1.000 UL
LTb
1342 4380 N
0 -3676 V
5528 0 V
0 3676 V
-5528 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
